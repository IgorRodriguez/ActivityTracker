package com.hersis.activitytracker.view;

import com.hersis.activitytracker.Time;
import com.hersis.activitytracker.controler.Controller;
import com.hersis.activitytracker.view.aux.*;
import java.awt.Point;
import java.sql.Timestamp;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Igor Rodriguez <igorrodriguezelvira@gmail.com>
 */
public class TimeListDialog extends javax.swing.JDialog {
	private final Controller controller;
	private TimeListTableModel timeListModel = new TimeListTableModel();
	int previousRow = -1;

	/**
	 * Creates new form ActivityListDialog
	 */
	public TimeListDialog(java.awt.Frame parent, boolean modal, Controller controller) {
		super(parent, modal);
		this.controller = controller;
		initComponents();
		this.getRootPane().setDefaultButton(btnClose);
	}
	
	private void init() {
		
        
        
		
	}

	public void updateTimeTable(ArrayList<Time> times) {
		timeListModel.removeAllTimes();
		for (Time t : times) {
			timeListModel.addTime(t);
		}
		TableCellRenderer renderer = tblTimes.getTableHeader().getDefaultRenderer();
		JLabel label = (JLabel)renderer;
		label.setHorizontalAlignment(JLabel.CENTER);
		
        TableColumnModel cm = tblTimes.getColumnModel();
        cm.getColumn(0).setPreferredWidth(130);
		cm.getColumn(3).setPreferredWidth(45);
		
		tblTimes.setDefaultRenderer(Integer.class, new ActivityIdTableCellRenderer(controller));
        tblTimes.setDefaultRenderer(Timestamp.class, new TimestampTableCellRenderer());
        tblTimes.setDefaultRenderer(String.class, new CustomDefaultTableCellRenderer());
        tblTimes.setDefaultRenderer(Long.class, new DurationTableCellRenderer(controller));
    }
	
	public void selectPreviousRow() {
		int rowCount = timeListModel.getRowCount();
		
		if (previousRow >= 0 && rowCount > 0) {
			if (rowCount > previousRow) {
				tblTimes.getSelectionModel().setSelectionInterval(previousRow, previousRow);
			} else if (rowCount == previousRow) {
				tblTimes.getSelectionModel().setSelectionInterval(previousRow - 1, previousRow - 1);	
			} else {
				int row = rowCount - 1;
				tblTimes.getSelectionModel().setSelectionInterval(row, row);
			} 
				
		}
	}
	
	public void selectLastInsertedRow(Time time) {
		int index = timeListModel.getTimeIndex(time);
		tblTimes.getSelectionModel().setSelectionInterval(index, index);
	}
	
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        timeListPanel = new javax.swing.JPanel();
        tblTimesScrollPane = new javax.swing.JScrollPane();
        tblTimes = new javax.swing.JTable();
        bottomButtonPanel = new javax.swing.JPanel();
        btnDelete = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Activity list");
        setName("ActivityListDialog");

        timeListPanel.setPreferredSize(new java.awt.Dimension(600, 415));
        timeListPanel.setLayout(new java.awt.GridBagLayout());

        tblTimesScrollPane.setPreferredSize(new java.awt.Dimension(400, 300));

        tblTimes.setModel(timeListModel);
        tblTimes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblTimes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTimesMouseClicked(evt);
            }
        });
        tblTimesScrollPane.setViewportView(tblTimes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 7, 4, 7);
        timeListPanel.add(tblTimesScrollPane, gridBagConstraints);

        bottomButtonPanel.setLayout(new java.awt.GridBagLayout());

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/trashcan_full.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setMinimumSize(new java.awt.Dimension(100, 42));
        btnDelete.setPreferredSize(new java.awt.Dimension(100, 42));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bottomButtonPanel.add(btnDelete, gridBagConstraints);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/button_cancel.png"))); // NOI18N
        btnClose.setText("Close");
        btnClose.setMinimumSize(new java.awt.Dimension(100, 42));
        btnClose.setPreferredSize(new java.awt.Dimension(100, 42));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        bottomButtonPanel.add(btnClose, gridBagConstraints);

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/txt.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setPreferredSize(new java.awt.Dimension(100, 42));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 25, 0, 0);
        bottomButtonPanel.add(btnEdit, gridBagConstraints);

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/empty.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.setPreferredSize(new java.awt.Dimension(100, 42));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        bottomButtonPanel.add(btnNew, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        timeListPanel.add(bottomButtonPanel, gridBagConstraints);

        getContentPane().add(timeListPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
		controller.closeTimeList();
	}//GEN-LAST:event_btnCloseActionPerformed

	private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
		controller.showNewTime();
	}//GEN-LAST:event_btnNewActionPerformed

	private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
		Time selectedTime = null;
		int selectedRow = tblTimes.getSelectedRow();
		previousRow = selectedRow;
		if (selectedRow != -1) {
			selectedTime = timeListModel.getTimeAt(selectedRow);
		}
		controller.showEditTime(selectedTime);
	}//GEN-LAST:event_btnEditActionPerformed

	private void tblTimesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTimesMouseClicked
		if (evt.getClickCount() > 1) {
			int row = tblTimes.rowAtPoint(new Point(evt.getX(), evt.getY()));
			controller.showEditTime(timeListModel.getTimeAt(row));
		}
	}//GEN-LAST:event_tblTimesMouseClicked

	private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
		Time selectedTime = null;
		int selectedRow = tblTimes.getSelectedRow();
		previousRow = selectedRow;
		if (selectedRow != -1) {
			selectedTime = timeListModel.getTimeAt(selectedRow);
		}
		controller.deleteTime(this, selectedTime);
	}//GEN-LAST:event_btnDeleteActionPerformed

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomButtonPanel;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JTable tblTimes;
    private javax.swing.JScrollPane tblTimesScrollPane;
    private javax.swing.JPanel timeListPanel;
    // End of variables declaration//GEN-END:variables
}
