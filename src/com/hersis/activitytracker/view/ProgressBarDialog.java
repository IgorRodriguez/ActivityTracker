package com.hersis.activitytracker.view;

import com.hersis.activitytracker.view.util.ProgressBarPanel;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Frame;
import javax.swing.JDialog;

/**
 *
 * @author Igor Rodriguez <igorrodriguezelvira@gmail.com>
 */
public class ProgressBarDialog extends javax.swing.JDialog {
	private ProgressBarPanel progressBarPanel;
	private Component parent;
	/**
	 * Creates new modal form ProgressBarDialog. After creating an instance, it won't be a progress
	 * bar until accessing setTaskTitle, getTaskTitle, setWaitMessage or getWaitMessage methods.
	 * 
	 * @param parent A Frame that is the parent of this JDialog.
	 */
	private ProgressBarDialog(java.awt.Frame parent) {
		super(parent, true);
		init(parent);
	}
	
	/**
	 * 
	 * Creates new modal form ProgressBarDialog. After creating an instance, it won't be a progress
	 * bar until accessing setTaskTitle, getTaskTitle, setWaitMessage or getWaitMessage methods.
	 *
	 * @param parent A JDialog that is the parent of this one. 
	 */
	private ProgressBarDialog(JDialog parent) {
		super(parent, true);
		init(parent);
	}
	
	/**
	 * Init method for all the constructors.
	 * @param parent The parent of this JDialog class.
	 */
	private void init(Component parent) {
		this.parent = parent;
		initComponents();
	}
	
	public static ProgressBarDialog getInstance(Component parent) {
		if (parent instanceof Frame) return new ProgressBarDialog((Frame) parent);
		else if (parent instanceof JDialog) return new ProgressBarDialog((JDialog) parent);
		else return null;
	}
	
	private ProgressBarPanel getProgressBarPanel() {
		if (progressBarPanel == null) {
			progressBarPanel = new ProgressBarPanel();
			this.add(BorderLayout.CENTER, progressBarPanel);
			this.pack();
			this.setLocationRelativeTo(parent);
		}
		return progressBarPanel;
	}

	public void setTaskTitle(String title) {
		getProgressBarPanel().setTaskTitle(title);
	}
	
	public String getTaskTitle() {
		return getProgressBarPanel().getTaskTitle();
	}
	
	public void setWaitMessage(String message) {
		getProgressBarPanel().setWaitMessage(message);
	}
	
	public String getWaitMessage() {
		return getProgressBarPanel().getWaitMessage();
	}
	
	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setResizable(false);
        setUndecorated(true);
        getContentPane().setLayout(new java.awt.BorderLayout(7, 7));

        pack();
    }// </editor-fold>//GEN-END:initComponents

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
