package com.hersis.activitytracker.view;

import com.hersis.activitytracker.controler.Controller;
import java.awt.Component;
import java.io.File;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Igor Rodriguez <igorrodriguezelvira@gmail.com>
 */
public class BackupRestoreDialog extends javax.swing.JDialog {
	private String backupPath = "";

	/**
	 * Creates new form BackupRestoreDialog
	 */
	public BackupRestoreDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		cmbBackupSelection.setRenderer(new ListCellRenderer() {
			@Override
			public Component getListCellRendererComponent(JList list, Object value, int index, 
					boolean isSelected, boolean cellHasFocus) {
				JLabel label = new JLabel();
				
				if (isSelected) {
					label.setBackground(list.getSelectionBackground());
					label.setForeground(list.getSelectionForeground());
				} else {
					label.setBackground(list.getBackground());
					label.setForeground(list.getForeground());
				}
				if (value != null & value instanceof File) label.setText(((File) value).getName());
				label.setOpaque(true);
				
				return label;
			}
		});
		// Updates the value of cmbAvailableBackups when the value of the JTextField txtPath changes.
		txtPath.getDocument().addDocumentListener(new DocumentListener() {

			@Override
			public void insertUpdate(DocumentEvent e) {
				changeAvailableBackups();
			}

			@Override
			public void removeUpdate(DocumentEvent e) {
				changeAvailableBackups();
			}

			@Override
			public void changedUpdate(DocumentEvent e) {
				changeAvailableBackups();
			}
			
			private void changeAvailableBackups() {
				loadAvailableBackups();
			}
			
		});
	}
	
	void loadBackupValues() {
		if ("".equals(backupPath)) setBackupPath();
		else txtPath.setText(backupPath);
	}
	
	private void setBackupPath() {
		String propertie = Controller.getPropertie(Controller.BACKUP_PATH_PROPERTIE);
		if (propertie != null) {
			txtPath.setText(propertie);
		} else {
			txtPath.setText("");
		}
	}
	
	private void loadAvailableBackups() {
		String path = txtPath.getText();
		File filePath = new File(path);
		
		// Update only if the value of txtPath is a valid path.
		if (path != null && !"".equals(path.trim()) && filePath.exists()) {
			backupPath = path;
			File [] availableBackups = Controller.getAvailableBackups(new File(backupPath));
			cmbBackupSelection.removeAllItems();
			if (availableBackups != null) {
				for (File f : availableBackups) {
					cmbBackupSelection.addItem(f);
				}
			}
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT
	 * modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        backupSelectionPanel = new javax.swing.JPanel();
        cmbBackupSelection = new javax.swing.JComboBox();
        buttonPanel = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        separatorPanel = new javax.swing.JPanel();
        btnAccept = new javax.swing.JButton();
        backupPathPanel = new javax.swing.JPanel();
        txtPath = new javax.swing.JTextField();
        btnFindPath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        backupSelectionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select a backup"));
        backupSelectionPanel.setLayout(new java.awt.GridBagLayout());

        cmbBackupSelection.setPreferredSize(new java.awt.Dimension(300, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        backupSelectionPanel.add(cmbBackupSelection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        getContentPane().add(backupSelectionPanel, gridBagConstraints);

        buttonPanel.setLayout(new java.awt.GridBagLayout());

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/button_cancel.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(btnCancel, gridBagConstraints);

        separatorPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(separatorPanel, gridBagConstraints);

        btnAccept.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hersis/activitytracker/images/button_ok.png"))); // NOI18N
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        buttonPanel.add(btnAccept, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        getContentPane().add(buttonPanel, gridBagConstraints);

        backupPathPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Backup path"));
        backupPathPanel.setLayout(new java.awt.GridBagLayout());

        txtPath.setPreferredSize(new java.awt.Dimension(200, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        backupPathPanel.add(txtPath, gridBagConstraints);

        btnFindPath.setText("...");
        btnFindPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindPathActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        backupPathPanel.add(btnFindPath, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        getContentPane().add(backupPathPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
		this.setVisible(false);
	}//GEN-LAST:event_btnCancelActionPerformed

	private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
		if (cmbBackupSelection.getSelectedIndex() != -1) {
			File backupFile = (File) cmbBackupSelection.getSelectedItem();
			Controller.restoreBackup(backupFile.getPath());
			this.setVisible(false);
		} else {
			AlertMessages.noBackupSelected(this);
		}
	}//GEN-LAST:event_btnAcceptActionPerformed

	private void btnFindPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindPathActionPerformed
		Common.setSelectedFile(txtPath.getText().trim());
		int selected = Common.showDirectoryChooser(this, "Select");
		if (selected == Common.APPROVE_OPTION) {
			String path = Common.getSelectedFile().getPath();
			txtPath.setText(path);
			backupPath = path;
		}
	}//GEN-LAST:event_btnFindPathActionPerformed

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backupPathPanel;
    private javax.swing.JPanel backupSelectionPanel;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFindPath;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JComboBox cmbBackupSelection;
    private javax.swing.JPanel separatorPanel;
    private javax.swing.JTextField txtPath;
    // End of variables declaration//GEN-END:variables

}
